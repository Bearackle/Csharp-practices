@{
    Layout = "~/Web/Views/Shared/_Layout.cshtml";
}

@model IEnumerable<MyEcommerce.Domain.Entities.CartItem>

<div class="container py-5">
    <h2 class="mb-4 text-center fw-bold">🛒 Giỏ hàng của bạn</h2>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info text-center shadow-sm">
            <h5>Giỏ hàng của bạn đang trống.</h5>
            <a href="@Url.Action("Index", "Products")" class="btn btn-primary mt-3">
                Tiếp tục mua sắm
            </a>
        </div>
    }
    else
    {
        <div class="table-responsive shadow-sm rounded-3">
            <table class="table align-middle text-center mb-0">
                <thead class="table-primary">
                    <tr>
                        <th>Ảnh</th>
                        <th>Tên sản phẩm</th>
                        <th>Giá</th>
                        <th>Số lượng</th>
                        <th>Tổng</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <tr data-cartitemid="@Model.ElementAt(i).CartItemId" >
                            <td style="width:100px;">
                                <img src="@Model.ElementAt(i).Product.Images.FirstOrDefault().ImagePath" alt="@Model.ElementAt(i).Product.ProductName"
                                     class="img-fluid rounded shadow-sm" style="max-height: 80px;" />
                            </td>
                            <td class="fw-semibold">@Model.ElementAt(i).Product.ProductName</td>
                            <td>@string.Format("{0:N0} ₫", @Model.ElementAt(i).Product.Price)</td>
                                
                            <td style="width:120px;">
                                <div class="d-flex justify-content-center align-items-center">
                                    <button class="btn-decrease btn btn-sm btn-outline-secondary">−</button>
                                    <input type="text" value="@Model.ElementAt(i).Quantity" class="form-control text-center mx-1" style="width:50px;" readonly />
                                    <button class="btn-increase btn btn-sm btn-outline-secondary">+</button>
                                </div>
                            </td>
                            <td class="fw-bold">@string.Format("{0:N0} ₫", @Model.ElementAt(i).Product.Price * @Model.ElementAt(i).Quantity)</td>
                            <td>
                                <button class="btn btn-sm btn-danger" onclick="removeFromCart(@Model.ElementAt(i).CartItemId)">
                                    <i class="bi bi-trash"></i> Xóa
                                </button>
                            </td>
                      </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-end mt-4">
            <div class="card shadow-sm p-3" style="width: 350px;">
                <h5 class="fw-bold mb-3">Tổng thanh toán:</h5>
                <h4 class="text-primary fw-bold mb-3">
                    @string.Format("{0:N0} ₫", Model.Sum(i => i.Product.Price * i.Quantity))
                </h4>
                <a href="@Url.Action("Checkout", "Cart")" class="btn btn-success w-100">
                    Thanh toán <i class="bi bi-credit-card ms-2"></i>
                </a>
            </div>
        </div>
    }
</div>
@section Scripts{
   <script>
       //debounce
       function debounce(func, delay) {
           let timeout;
           return function (...args) {
               clearTimeout(timeout);
               timeout = setTimeout(() => func.apply(this, args), delay);
           };
       }
       function updateQuantity(cartItemId, newQty) {
           console.log(newQty)
           console.log(cartItemId)
           $.ajax({
               url: '@Url.Action("UpdateQuantity", "Carts")',
               type: 'POST',
               data: {
                   CartItemId: cartItemId,
                   Quantity: newQty
               }
           })
       }
       const debouncedUpdate = debounce(updateQuantity, 2000); // 500ms sau lần click cuối cùng
       $(document).on('click', '.btn-increase, .btn-decrease', function () {
           const row = $(this).closest('tr');
           const cartItemId = row.data('cartitemid');
           const input = row.find('input[type="text"]'); 
           let qty = parseInt(input.val());

           if ($(this).hasClass('btn-increase')) qty += 1;
           else if ($(this).hasClass('btn-decrease') && qty > 1) qty -= 1;

           input.val(qty); 
           console.log(cartItemId, qty);
           debouncedUpdate(cartItemId, qty);
       });
       function removeFromCart(cartItemId) {
           console.log(cartItemId)
           $.ajax({
               url: '@Url.Action("DeleteProductInCart","Carts")',
               type: 'POST',
               data: {
                   CartItemId: cartItemId
               },
               success: function (response) {
                   $('tr[data-cartitemid="' + cartItemId + '"]').remove();
               }
           })
       }
    </script>   
}
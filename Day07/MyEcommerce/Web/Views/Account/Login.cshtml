@using MyEcommerce.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<main class="container my-5" aria-labelledby="title" role="main">
    <div class="row justify-content-center align-items-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body p-4">
                    <h2 id="title" class="h4 mb-3 text-center">@ViewBag.Title</h2>

                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form", @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
                        <div class="form-floating mb-3">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control",@id = "Email", placeholder = "Email", type = "email", autocomplete = "email", autofocus = "autofocus", required = "required" })
                            @Html.LabelFor(m => m.Email, "Email")
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger small mt-1" })
                        </div>

                        <div class="form-floating mb-3">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Mật khẩu", autocomplete = "current-password", required = "required" })
                            @Html.LabelFor(m => m.Password, "Mật khẩu")
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger small mt-1" })
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="form-check">
                                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input", id = "RememberMe" })
                                <label class="form-check-label small" for="RememberMe">@Html.DisplayNameFor(m => m.RememberMe)</label>
                            </div>
                            <div>
                                @Html.ActionLink("Quên mật khẩu?", "ForgotPassword", "Account", routeValues: null, htmlAttributes: new { @class = "small" })
                            </div>
                        </div>

                        <div class="d-grid mb-3">
                            <button type="submit" class="btn btn-primary btn-lg">Đăng nhập</button>
                        </div>

                        <div class="text-center small mb-0">
                            Chưa có tài khoản?
                            @Html.ActionLink("Đăng ký", "Register", "Account", routeValues: null, htmlAttributes: new { @class = "fw-semibold" })
                        </div>
                    }

                </div>

                <div class="card-footer bg-transparent border-top-0 px-4 pb-4">
                    <div class="text-center small text-muted mb-2">Hoặc đăng nhập bằng</div>
                    <div class="d-flex gap-2 justify-content-center">
                        <div class="w-100">
                            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                        </div>
                    </div>
                </div>
            </div>

            <p class="text-center text-muted small mt-3">
                Bằng việc đăng nhập, bạn đồng ý với Điều khoản & Chính sách của chúng tôi.
            </p>
        </div>
    </div>
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // Optional: client-side bootstrap-style validation toggle
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })();
    </script>
}
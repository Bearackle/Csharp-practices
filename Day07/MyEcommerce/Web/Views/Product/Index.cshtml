@using MyEcommerce.Domain.Entities
@model IEnumerable<MyEcommerce.Domain.Entities.Product>

@{
    Layout = "~/Web/Views/Shared/_Layout.cshtml";
    var currentCategory = Request.QueryString["category"];
    var currentSort = Request.QueryString["sort"];
    var categories = ViewBag.Categories as IEnumerable<Category> ?? Enumerable.Empty<Category>();
}

<div class="container my-4">
    <div class="d-flex flex-column flex-sm-row justify-content-between align-items-start gap-3 mb-4">
        <h2 class="m-0">Tất cả sản phẩm</h2>

        <form method="get" class="d-flex gap-2 align-items-center" id="filterForm">
            <label class="small text-muted me-1">Danh mục</label>
            <select name="category" class="form-select form-select-sm" style="min-width:170px;">
                <option value="">Tất cả</option>
                @foreach (var c in categories)
                {
                    <option value="@c.CategoryId" @(currentCategory == c.CategoryId.ToString() ? "selected" : "")>@c.CategoryName</option>
                }
            </select>

            <label class="small text-muted ms-2 me-1">Sắp xếp giá</label>
            <select name="sort" class="form-select form-select-sm" id="sortSelect" style="min-width:160px;">
                <option value="">Mặc định</option>
                <option value="asc" @(currentSort == "asc" ? "selected" : "")>Giá: thấp → cao</option>
                <option value="desc" @(currentSort == "desc" ? "selected" : "")>Giá: cao → thấp</option>
            </select>

            <button type="submit" class="btn btn-outline-primary btn-sm ms-2">Áp dụng</button>
        </form>
    </div>

    <hr />

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info">Không có sản phẩm nào.</div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-5 g-3">
            @foreach (var p in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="ratio ratio-4x3">
                            @*<img src="@(string.IsNullOrWhiteSpace(p.Images.First().ImagePath) ? Url.Content("~/Content/images/placeholder.png") : p.Images.First().ImagePath)"
                                 class="card-img-top object-fit-cover" alt="@p.ProductName" />*@
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h6 class="card-title mb-2 text-truncate" title="@p.ProductName">@p.ProductName</h6>
                            <div class="mt-auto d-flex justify-content-between align-items-center">
                                <div class="text-primary fw-semibold">
                                    @{
                                        // format price safely
                                        var price = 0M;
                                        try { price = Convert.ToDecimal(p.Price); } catch { price = 0M; }
                                    }
                                    @price.ToString("N0") đ
                                </div>
                                <a href="@Url.Action("Details", "Product", new { id = p.ProductId })" class="btn btn-sm btn-outline-secondary">Xem</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section scripts {
    <script>
        (function () {
            // submit form when sort selection changes (optional UX)
            var sort = document.getElementById('sortSelect');
            if (sort) {
                sort.addEventListener('change', function () {
                    document.getElementById('filterForm').submit();
                });
            }
        })();
    </script>
}

